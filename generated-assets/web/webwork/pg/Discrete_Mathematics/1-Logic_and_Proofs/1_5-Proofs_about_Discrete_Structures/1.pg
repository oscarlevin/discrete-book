#############################################
###       Generated from PreTeXt source      
###       on 2025-09-04T11:56:31-06:00       
###   A recent stable commit (2022-07-01):   
### 6c761d3dba23af92cba35001c852aac04ae99a5f 
###                                          
###         https://pretextbook.org          
###                                          
#############################################
## DBsubject()
## DBchapter()
## DBsection()
## Level()
## KEYWORDS()
## TitleText1()
## EditionText1()
## AuthorText1()
## Section1(not reported)
## Problem1(1)
## Author()
## Institution()
## Language(en-US)

DOCUMENT();

############################################################
# Load Macros
############################################################
loadMacros(
  "PGstandard.pl",
  "PGML.pl",
  "scaffold.pl",
  "AnswerFormatHelp.pl",
  "PCCmacros.pl",
  "parserMultiAnswer.pl",
  "parserPopUp.pl",
  "PGcourse.pl",
);
COMMENT('Authored in PreTeXt');
COMMENT('This problem is scaffolded with multiple parts');

############################################################
# Header
############################################################
TEXT(beginproblem());

############################################################
# PG Setup Code
############################################################
Context('Numeric');
$B1 = Set(1,3,5,7,9);
$A1 = Set(1,3,5) -> cmp(
  list_checker => sub {
    my ($correct, $student, $ansHash, $value) = @_;
    my $stSet = $ansHash->{student_value};
    my $size = $stSet->length();
    my $test = $stSet->isSubsetOf($B1);
    Value->Error("The set must have 3 elements") if $size != 3;
    Value->Error("The set must be a subset of B") if !$test;
    return $size;
  }
);
$twosets = MultiAnswer(Set(1,2,3),Set(1,2,3,4))->with(
  singleResult => 0,
  checker => sub {
    my ($correct, $student, $self) = @_;
    my $stSet1 = Set($student->[0]);
    my $stSet2 = Set($student->[1]);
    my $test = $stSet1->isSubsetOf($stSet2);
    my $stSetUnion = Set($stSet1 + $stSet2);
    Value->Error("The sets must be different") if $stSet1 == $stSet2;
    $self->setMessage(2,"The union of \(A\) and \(B\) is $stSetUnion but must be \(B\)") if !test;
    return $test;
  }
);
$twosets2 = MultiAnswer(Set(1,2,3),Set(1,2,3,4))->with(
  singleResult => 0,
  checker => sub {
    my ($correct, $student, $self) = @_;
    my $stSet1 = Set($student->[0]);
    my $stSet2 = Set($student->[1]);
    my $test = $stSet1->isSubsetOf($stSet2);
    my $stSetUnion = Set($stSet1 + $stSet2);
    Value->Error("The sets must be different") if $stSet1 == $stSet2;
    $self->setMessage(2,"The union of \(A\) and \(B\) is $stSetUnion but should not be \(B\)") if $test;
    return !$test;
  }
);
$yes = PopUp(["?", "yes", "no"], "yes");
$no = PopUp(["?", "yes", "no"], "no");

############################################################
# Body
############################################################

BEGIN_PGML
Remember that a set is just a collection of elements.  Here are two definitions about sets:
a.  A set [`A`] is a subset of a set [`B\text{,}`] written [`A \subseteq B\text{,}`] provided every element in [`A`] is also an element of [`B\text{.}`]

a.  Given sets [`A`] and [`B\text{,}`] the union of [`A`] and [`B\text{,}`] written [`A \cup B\text{,}`] is the set containing every element that is in [`A`] or [`B`] or both.

Let's build some examples.

END_PGML

############################################################
# Scaffold
############################################################
Scaffold::Begin(numbered => 1,is_open => "correct_or_first_incorrect",can_open => when_previous_correct,);

############################################################
# Section
############################################################
Section::Begin("");

BEGIN_PGML
Let [`B = \{1, 3, 5, 7, 9\}\text{.}`]  Give an example of a set [`A`] containing [`3`] elements that is a subset of [`B\text{.}`]

[_]{$A1}{10}

What is [`A \cup B`] for the set [`A`] you gave as an example?

[_]{$B1}{20}

END_PGML

Section::End();

############################################################
# Section
############################################################
Section::Begin("");

BEGIN_PGML
Give an example of two distinct sets [`A`] and [`B`] such that [`A \cup B = B\text{.}`]

[`A = `] [_]{$twosets}{20}; [`B = `] [_]{$twosets}{20}

For the example you gave, is [`A \subseteq B\text{?}`]  [_]{$yes}{5}

END_PGML

Section::End();

############################################################
# Section
############################################################
Section::Begin("");

BEGIN_PGML
Find examples, if they exist, of sets [`A`] and [`B`] such that [`A \cup B \ne B\text{.}`]

[`A = `] [_]{$twosets2}{20}; [`B = `] [_]{$twosets2}{20}.

[@KeyboardInstructions('(if there are no such sets, enter DNE in both blanks)')@]**

For the example you gave, is [`A \subseteq B\text{?}`]  [_]{$no}{5}

END_PGML

Section::End();

Scaffold::End();

############################################################
# End Problem
############################################################

ENDDOCUMENT();
