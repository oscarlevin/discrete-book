#############################################
###       Generated from PreTeXt source      
###       on 2025-10-07T19:48:55-06:00       
###   A recent stable commit (2022-07-01):   
### 6c761d3dba23af92cba35001c852aac04ae99a5f 
###                                          
###         https://pretextbook.org          
###                                          
#############################################
## DBsubject()
## DBchapter()
## DBsection()
## Level()
## KEYWORDS()
## TitleText1()
## EditionText1()
## AuthorText1()
## Section1(not reported)
## Problem1(1)
## Author()
## Institution()
## Language(en-US)

DOCUMENT();

############################################################
# Load Macros
############################################################
loadMacros(
  "PGstandard.pl",
  "PGML.pl",
  "scaffold.pl",
  "AnswerFormatHelp.pl",
  "PCCmacros.pl",
  "PGcourse.pl",
);
COMMENT('Authored in PreTeXt');
COMMENT('This problem is scaffolded with multiple parts');

############################################################
# Header
############################################################
TEXT(beginproblem());

############################################################
# PG Setup Code
############################################################
Context()->strings->add(111 => {}, 110 => {}, 101 => {}, 100 => {},'011' => {}, '001' => {}, '010' => {}, '000' => {});
$start1 = List(String(111), String(110), String(101), String(100));
$weight2 = List(String(110), String(101), String('011'));
$either = List(String(111), String(110), String(101), String(100), String('011'));

############################################################
# Body
############################################################

BEGIN_PGML
Consider the eight bit strings of length 3.  Let's find the number of strings that start with 1 or have weight 2 (i.e., contain exactly two 1s).

END_PGML

############################################################
# Scaffold
############################################################
Scaffold::Begin(numbered => 1,is_open => "correct_or_first_incorrect",can_open => when_previous_correct,);

############################################################
# Section
############################################################
Section::Begin("");

BEGIN_PGML
List all the 3-bit strings that start with 1.

[_]{$start1}{40}

[@KeyboardInstructions('(separate strings with commas)')@]**

END_PGML

Section::End();

############################################################
# Section
############################################################
Section::Begin("");

BEGIN_PGML
List all the 3-bit strings that have weight 2.

[_]{$weight2}{40}

END_PGML

Section::End();

############################################################
# Section
############################################################
Section::Begin("");

BEGIN_PGML
Now list all the 3-bit strings that start with 1 or have weight 2.  But be lazy: Don't list them from scratch. Use your lists from the two tasks above.

[_]{$either}{50}

END_PGML

Section::End();

############################################################
# Section
############################################################
Section::Begin("");

BEGIN_PGML
How many strings are there in the lists?
* Strings that start with 1: [_]{4}{5}

* Strings of weight 2: [_]{3}{5}

* Strings that start with 1 or have weight 2: [_]{5}{5}

* Strings that both start with a 1 _and_ have weight 2: [_]{2}{5}

END_PGML

Section::End();

Scaffold::End();

############################################################
# End Problem
############################################################

ENDDOCUMENT();
