<?xml version="1.0" encoding="UTF-8"?>

<section permid="suF" xmlns:xi="http://www.w3.org/2001/XInclude" xml:id="sec_propositional">
  <title>Propositional Logic</title>
  <introduction permid="MXq">
    <investigation permid="tez">
      <p permid="Anz">
        You stumble upon two trolls playing Stratego<registered/>.
        They tell you:
      </p>

      <blockquote permid="Wrc">
        <p permid="ZVC">
          Troll 1: If we are cousins, then we are both knaves.
        </p>

        <p permid="GcL">
          Troll 2: We are cousins or we are both knaves.
        </p>
      </blockquote>

      <p permid="guI">
        Could both trolls be knights?
        Recall that all trolls are either always-truth-telling knights or always-lying knaves.
      </p>
    </investigation>
    <p permid="MBR">
      A <term>proposition</term>
          <idx><h>proposition</h></idx>
      is simply a statement. <term>Propositional logic</term>
      studies the ways statements can interact with each other.
      It is important to remember that propositional logic does not really care about the content of the statements.
      For example, in terms of propositional logic, the claims,
      <q>if the moon is made of cheese then basketballs are round,</q>
      and <q>if spiders have eight legs then Sam walks with a limp</q> are exactly the same.
      They are both implications: statements of the form, <m>P \imp Q</m>.
    </p>
  </introduction>

  <subsection permid="YBO">
    <title>Truth Tables</title>
    <idx><h>truth table</h></idx>

    <p permid="YQj">
      Here's a question about playing Monopoly:
    </p>

    <blockquote permid="Cyl">
      <p permid="mjU">
        If you get more doubles than any other player then you will lose,
        or if you lose then you must have bought the most properties.
      </p>
    </blockquote>

    <p permid="EXs">
      True or false?
      We will answer this question,
      and won't need to know anything about Monopoly.
      Instead we will look at the logical
      <em>form</em> of the statement.
    </p>

    <p permid="leB">
      We need to decide when the statement <m>(P \imp Q) \vee (Q \imp R)</m> is true.
      Using the definitions of the connectives in
      <xref ref="sec_intro-statements"/>, we see that for this to be true,
      either <m>P \imp Q</m> must be true or <m>Q \imp R</m> must be true
      (or both).
      Those are true if either <m>P</m> is false or <m>Q</m> is true
      (in the first case)
      and <m>Q</m> is false or <m>R</m> is true
      (in the second case).
      So<mdash/>yeah, it gets kind of messy.
      Luckily, we can make a chart to keep track of all the possibilities.
      Enter <term>truth tables</term>.
      The idea is this: on each row,
      we list a possible combination of T's and F's
      (for true and false)
      for each of the sentential variables,
      and then mark down whether the statement in question is true or false in that case.
      We do this for every possible combination of T's and F's.
      Then we can clearly see in which cases the statement is true or false.
      For complicated statements,
      we will first fill in values for each part of the statement,
      as a way of breaking up our task into smaller, more manageable pieces.
    </p>

    <p permid="RlK">
      Since the truth value of a statement is completely determined by the truth values of its parts and how they are connected,
      all you really need to know is the truth tables for each of the logical connectives.
      Here they are:
    </p>

    <sidebyside permid="BOr" width="20%" margins="auto">

      <tabular permid="TKR" halign="center">
        <col right="minor"/>
        <col right="medium"/>
        <col/>
        <row bottom="minor">
          <cell><m>P</m></cell>
          <cell><m>Q</m></cell>
          <cell><m>P\wedge Q</m></cell>
        </row>
        <row>
          <cell>T</cell>
          <cell>T</cell>
          <cell>T</cell>
        </row>
        <row>
          <cell>T</cell>
          <cell>F</cell>
          <cell>F</cell>
        </row>
        <row>
          <cell>F</cell>
          <cell>T</cell>
          <cell>F</cell>
        </row>
        <row>
          <cell>F</cell>
          <cell>F</cell>
          <cell>F</cell>
        </row>
      </tabular>

      <tabular permid="zSa" halign="center">
        <col right="minor"/>
        <col right="medium"/>
        <col/>
        <row bottom="minor">
          <cell><m>P</m></cell>
          <cell><m>Q</m></cell>
          <cell><m>P\vee Q</m></cell>
        </row>
        <row>
          <cell>T</cell>
          <cell>T</cell>
          <cell>T</cell>
        </row>
        <row>
          <cell>T</cell>
          <cell>F</cell>
          <cell>T</cell>
        </row>
        <row>
          <cell>F</cell>
          <cell>T</cell>
          <cell>T</cell>
        </row>
        <row>
          <cell>F</cell>
          <cell>F</cell>
          <cell>F</cell>
        </row>
      </tabular>

      <tabular permid="fZj" halign="center">
        <col right="minor"/>
        <col right="medium"/>
        <col/>
        <row bottom="minor">
          <cell><m>P</m></cell>
          <cell><m>Q</m></cell>
          <cell><m>P\imp Q</m></cell>
        </row>
        <row>
          <cell>T</cell>
          <cell>T</cell>
          <cell>T</cell>
        </row>
        <row>
          <cell>T</cell>
          <cell>F</cell>
          <cell>F</cell>
        </row>
        <row>
          <cell>F</cell>
          <cell>T</cell>
          <cell>T</cell>
        </row>
        <row>
          <cell>F</cell>
          <cell>F</cell>
          <cell>T</cell>
        </row>
      </tabular>

      <tabular permid="Mgs" halign="center">
        <col right="minor"/>
        <col right="medium"/>
        <col/>
        <row bottom="minor">
          <cell><m>P</m></cell>
          <cell><m>Q</m></cell>
          <cell><m>P\iff Q</m></cell>
        </row>
        <row>
          <cell>T</cell>
          <cell>T</cell>
          <cell>T</cell>
        </row>
        <row>
          <cell>T</cell>
          <cell>F</cell>
          <cell>F</cell>
        </row>
        <row>
          <cell>F</cell>
          <cell>T</cell>
          <cell>F</cell>
        </row>
        <row>
          <cell>F</cell>
          <cell>F</cell>
          <cell>T</cell>
        </row>
      </tabular>

    </sidebyside>

    <p permid="xsT">
      The truth table for negation looks like this:
    </p>

    <sidebyside permid="hVA">

      <tabular permid="snB" halign="center">
        <col right="medium"/>
        <col/>
        <row bottom="minor">
          <cell><m>P</m></cell>
          <cell><m>\neg P</m></cell>
        </row>
        <row>
          <cell>T</cell>
          <cell>F</cell>
        </row>
        <row>
          <cell>F</cell>
          <cell>T</cell>
        </row>
        <row>
          <cell/>
        </row>
      </tabular>

    </sidebyside>

    <p permid="dAc">
      None of these truth tables should come as a surprise;
      they are all just restating the definitions of the connectives.
      Let's try another one.
    </p>

    <example permid="pzZ">
      <statement>
        <p permid="eFv">
          Make a truth table for the statement <m>\neg P \vee Q</m>.
        </p>
      </statement>
      <solution permid="ZlI">
        <p permid="uTM">
          Note that this statement is not <m>\neg(P \vee Q)</m>,
          the negation belongs to <m>P</m> alone.
          Here is the truth table:
        </p>

        <sidebyside permid="OcJ">

          <tabular permid="Krf" halign="center">
            <col right="minor"/>
            <col right="medium"/>
            <col right="minor"/>
            <col/>
            <row bottom="minor">
              <cell><m>P</m></cell>
              <cell><m>Q</m></cell>
              <cell><m>\neg P</m></cell>
              <cell><m>\neg P \vee Q</m></cell>
            </row>
            <row>
              <cell>T</cell>
              <cell>T</cell>
              <cell>F</cell>
              <cell>T</cell>
            </row>
            <row>
              <cell>T</cell>
              <cell>F</cell>
              <cell>F</cell>
              <cell>F</cell>
            </row>
            <row>
              <cell>F</cell>
              <cell>T</cell>
              <cell>T</cell>
              <cell>T</cell>
            </row>
            <row>
              <cell>F</cell>
              <cell>F</cell>
              <cell>T</cell>
              <cell>T</cell>
            </row>
          </tabular>

        </sidebyside>

        <p permid="baV">
          We added a column for <m>\neg P</m> to make filling out the last column easier.
          The entries in the <m>\neg P</m> column were determined by the entries in the <m>P</m> column.
          Then to fill in the final column,
          look only at the column for <m>Q</m> and the column for <m>\neg P</m> and use the rule for <m>\vee</m>.
        </p>
      </solution>
    </example>

    <p permid="JHl">
      Now let's answer our question about monopoly:
    </p>

    <example permid="VHi">
      <statement>
        <p permid="KME">
          Analyze the statement,
          <q>if you get more doubles than any other player you will lose,
          or that if you lose you must have bought the most properties,</q> using truth tables.
        </p>
      </statement>
      <solution permid="FsR">
        <p permid="Hie">
          Represent the statement in symbols as <m>(P \imp Q) \vee (Q \imp R)</m>,
          where <m>P</m> is the statement
          <q>you get more doubles than any other player,</q>
          <m>Q</m> is the statement <q>you will lose,</q>
          and <m>R</m> is the statement <q>you must have bought the most properties.</q> Now make a truth table.
        </p>

        <p permid="npn">
          The truth table needs to contain 8 rows in order to account for every possible combination of truth and falsity among the three statements.
          Here is the full truth table:
        </p>

        <sidebyside permid="ujS">

          <tabular permid="qyo" halign="center">
            <col right="minor"/>
            <col right="minor"/>
            <col right="medium"/>
            <col right="minor"/>
            <col right="minor"/>
            <col/>
            <row bottom="minor">
              <cell><m>P</m></cell>
              <cell><m>Q</m></cell>
              <cell><m>R</m></cell>
              <cell><m>P \imp Q</m></cell>
              <cell><m>Q \imp R</m></cell>
              <cell><m>(P \imp Q) \vee (Q \imp R)</m></cell>
            </row>
            <row>
              <cell>T</cell>
              <cell>T</cell>
              <cell>T</cell>
              <cell>T</cell>
              <cell>T</cell>
              <cell>T</cell>
            </row>
            <row>
              <cell>T</cell>
              <cell>T</cell>
              <cell>F</cell>
              <cell>T</cell>
              <cell>F</cell>
              <cell>T</cell>
            </row>
            <row>
              <cell>T</cell>
              <cell>F</cell>
              <cell>T</cell>
              <cell>F</cell>
              <cell>T</cell>
              <cell>T</cell>
            </row>
            <row>
              <cell>T</cell>
              <cell>F</cell>
              <cell>F</cell>
              <cell>F</cell>
              <cell>T</cell>
              <cell>T</cell>
            </row>
            <row>
              <cell>F</cell>
              <cell>T</cell>
              <cell>T</cell>
              <cell>T</cell>
              <cell>T</cell>
              <cell>T</cell>
            </row>
            <row>
              <cell>F</cell>
              <cell>T</cell>
              <cell>F</cell>
              <cell>T</cell>
              <cell>F</cell>
              <cell>T</cell>
            </row>
            <row>
              <cell>F</cell>
              <cell>F</cell>
              <cell>T</cell>
              <cell>T</cell>
              <cell>T</cell>
              <cell>T</cell>
            </row>
            <row>
              <cell>F</cell>
              <cell>F</cell>
              <cell>F</cell>
              <cell>T</cell>
              <cell>T</cell>
              <cell>T</cell>
            </row>
          </tabular>

        </sidebyside>

        <p permid="Tww">
          The first three columns are simply a systematic listing of all possible combinations of T and F for the three statements
          (do you see how you would list the 16 possible combinations for four statements?).
          The next two columns are determined by the values of <m>P</m>,
          <m>Q</m>, and <m>R</m> and the definition of implication.
          Then, the last column is determined by the values in the previous two columns and the definition of <m>\vee</m>.
          It is this final column we care about.
        </p>

        <p permid="zDF">
          Notice that in each of the eight possible cases,
          the statement in question is true.
          So our statement about monopoly is true
          (regardless of how many properties you own,
          how many doubles you roll, or whether you win or lose).
        </p>
      </solution>
    </example>

    <p permid="pOu">
      The statement about monopoly is an example of a <term>tautology</term>,
          <idx><h>tautology</h></idx>
      a statement which is true on the basis of its logical form alone.
      Tautologies are always true but they don't tell us much about the world.
      No knowledge about monopoly was required to determine that the statement was true.
      In fact, it is equally true that
      <q>If the moon is made of cheese,
      then Elvis is still alive,
      or if Elvis is still alive, then unicorns have 5 legs.</q>
    </p>
  </subsection>

  <subsection permid="EIX">
    <title>Logical Equivalence</title>
    <p permid="VVD">
      You might have noticed that the final column in the truth table from
      <m>\neg P \vee Q</m> is identical to the final column in the truth table for <m>P \imp Q</m>:
    </p>

    <sidebyside permid="SMC">

      <tabular permid="YuK" halign="center">
        <col right="minor"/>
        <col right="medium"/>
        <col right="minor"/>
        <col/>
        <row bottom="minor">
          <cell><m>P</m></cell>
          <cell><m>Q</m></cell>
          <cell><m>P \imp Q</m></cell>
          <cell><m>\neg P \vee Q</m></cell>
        </row>
        <row>
          <cell>T</cell>
          <cell>T</cell>
          <cell>T</cell>
          <cell>T</cell>
        </row>
        <row>
          <cell>T</cell>
          <cell>F</cell>
          <cell>F</cell>
          <cell>F</cell>
        </row>
        <row>
          <cell>F</cell>
          <cell>T</cell>
          <cell>T</cell>
          <cell>T</cell>
        </row>
        <row>
          <cell>F</cell>
          <cell>F</cell>
          <cell>T</cell>
          <cell>T</cell>
        </row>
      </tabular>

    </sidebyside>

    <p permid="CcM">
      This says that no matter what <m>P</m> and <m>Q</m> are,
      the statements <m>\neg P \vee Q</m> and
      <m>P \imp Q</m> either both true or both false.
      We therefore say these statements are
      <term>logically equivalent</term>.
    </p>

    <assemblage permid="xey">
      <title>Logical Equivalence</title>
      <p permid="ijV">
        Two (molecular) statements <m>P</m> and <m>Q</m> are
        <term>logically equivalent</term> 
            <idx><h>logical equivalence</h></idx>
        provided <m>P</m> is true precisely when <m>Q</m> is true.
        That is, <m>P</m> and <m>Q</m> have the same truth value under any assignment of truth values to their atomic parts.
      </p>

      <p permid="Ore">
        To verify that two statements are logically equivalent,
        you can make a truth table for each and check whether the columns for the two statements are identical.
      </p>
    </assemblage>

    <p permid="uyn">
      Recognizing two statements as logically equivalent can be very helpful.
      Rephrasing a mathematical statement can often lends insight into what it is saying,
      or how to prove or refute it.
      Using truth tables we can systematically verify that two statements are indeed logically equivalent.
    </p>

    <example permid="arb">
      <statement>
        <p permid="qTN">
          Are the statements, <q>it will not rain or snow</q>
          and <q>it will not rain and it will not snow</q> logically equivalent?
        </p>
      </statement>
      <solution permid="lAa">
        <p permid="fKO">
          We want to know whether <m>\neg(P \vee Q)</m> is logically equivalent to <m>\neg P \wedge \neg Q</m>.
          Make a truth table which includes both statements:
        </p>

        <sidebyside permid="yTL">

          <tabular permid="WFx" halign="center">
            <col right="minor"/>
            <col right="medium"/>
            <col right="minor"/>
            <col/>
            <row bottom="minor">
              <cell><m>P</m></cell>
              <cell><m>Q</m></cell>
              <cell><m>\neg(P \vee Q)</m></cell>
              <cell><m>\neg P \wedge \neg Q</m></cell>
            </row>
            <row>
              <cell>T</cell>
              <cell>T</cell>
              <cell>F</cell>
              <cell>F</cell>
            </row>
            <row>
              <cell>T</cell>
              <cell>F</cell>
              <cell>F</cell>
              <cell>F</cell>
            </row>
            <row>
              <cell>F</cell>
              <cell>T</cell>
              <cell>F</cell>
              <cell>F</cell>
            </row>
            <row>
              <cell>F</cell>
              <cell>F</cell>
              <cell>T</cell>
              <cell>T</cell>
            </row>
          </tabular>

        </sidebyside>

        <p permid="LRX">
          Since in every row the truth values for the two statements are equal,
          the two statements are logically equivalent.
        </p>
      </solution>
    </example>

    <p permid="aFw">
      Notice that this example gives us a way to <q>distribute</q>
      a negation over a disjunction
      (an <q>or</q>).
      We have a similar rule for distributing over conjunctions (<q>and</q>s):
    </p>

    <assemblage permid="dlH">
      <title>De Morgan's Laws</title>
      <p permid="GMF">
            <idx><h>De Morgan's laws</h></idx>
        <me permid="AXt">
          \neg(P \wedge Q) \text{ is logically equivalent to } \neg P \vee \neg Q
        </me>.
        <me permid="heC">
          \neg(P \vee Q) \text{ is logically equivalent to } \neg P \wedge \neg Q
        </me>.
      </p>
    </assemblage>

    <p permid="mTO">
      This suggests there might be a sort of <q>algebra</q>
      you could apply to statements (okay, there is:
      it is called <em>Boolean algebra</em>) to transform one statement into another.
      We can start collecting useful examples of logical equivalence,
      and apply them in succession to a statement,
      instead of writing out a complicated truth table.
      We will probably also want a way to deal with double negation:
    </p>

    <assemblage permid="JsQ">
      <title>Double Negation</title>
      <p permid="TaX">
            <idx><h>double negation</h></idx>
        <me permid="NlL">
          \neg \neg P \mbox{ is logically equivalent to } P
        </me>.
      </p>

      <p permid="zig">
        Example: <q>It is not the case that <m>c</m> is not odd</q>
        means <q><m>c</m> is odd.</q>
      </p>
    </assemblage>

    <p permid="fpp">
      Let's see how we can apply the equivalences we have encountered so far.
    </p>

    <example permid="Gyk">
      <statement>
        <p permid="XaW">
          Prove that the statements <m>\neg(P \imp Q)</m> and
          <m>P\wedge \neg Q</m> are logically equivalent without using truth tables.
        </p>
      </statement>
      <solution permid="RHj">
        <p permid="rZg">
          We want to start with one of the statements,
          and transform it into the other through a sequence of logically equivalent statements.
          Start with <m>\neg(P \imp Q)</m>.
          We can rewrite the implication as a disjunction this is logically equivalent to
          <me permid="tsU">
            \neg(\neg P \vee Q)
          </me>.
          Now apply DeMorgan's law to get
          <me permid="ZAd">
            \neg\neg P \wedge \neg Q
          </me>.
          Finally, use double negation to arrive at <m>P \wedge \neg Q</m>
        </p>
      </solution>
    </example>

    <p permid="Lwy">
      Notice that the above example illustrates that the negation of an implication is NOT an implication:
      it is a conjunction!
    </p>

    <p permid="rDH">
      To verify that two statements are logically equivalent,
      you can use truth tables or a sequence of logically equivalent replacements.
      The truth table method, although cumbersome,
      has the advantage that it can verify that two statements are NOT logically equivalent.
    </p>

    <example permid="mFt">
      <statement>
        <p permid="Dif">
          Are the statements
          <m>(P \vee Q) \imp R</m>
          and
          <m>(P \imp R) \vee (Q \imp R)</m>
          logically equivalent?
        </p>
      </statement>
      <solution permid="xOs">
        <p permid="Ygp">
          Note that while we could start rewriting these statements with logically equivalent replacements in the hopes of transforming one into another,
          we will never be sure that our failure is due to their lack of logical equivalence rather than our lack of imagination.
          So instead, let's make a truth table:
        </p>

        <sidebyside permid="faU">

          <tabular permid="CMG" halign="center">
            <col right="minor"/>
            <col right="minor"/>
            <col right="medium"/>
            <col right="minor"/>
            <col/>
            <row bottom="minor">
              <cell><m>P</m></cell>
              <cell><m>Q</m></cell>
              <cell><m>R</m></cell>
              <cell><m>(P\vee Q) \imp R</m></cell>
              <cell><m>(P\imp R) \vee (Q \imp R)</m></cell>
            </row>
            <row>
              <cell>T</cell>
              <cell>T</cell>
              <cell>T</cell>
              <cell>T</cell>
              <cell>T</cell>
            </row>
            <row>
              <cell>T</cell>
              <cell>T</cell>
              <cell>F</cell>
              <cell>F</cell>
              <cell>F</cell>
            </row>
            <row>
              <cell>T</cell>
              <cell>F</cell>
              <cell>T</cell>
              <cell>T</cell>
              <cell>T</cell>
            </row>
            <row>
              <cell>T</cell>
              <cell>F</cell>
              <cell>F</cell>
              <cell>F</cell>
              <cell>T</cell>
            </row>
            <row>
              <cell>F</cell>
              <cell>T</cell>
              <cell>T</cell>
              <cell>T</cell>
              <cell>T</cell>
            </row>
            <row>
              <cell>F</cell>
              <cell>T</cell>
              <cell>F</cell>
              <cell>F</cell>
              <cell>T</cell>
            </row>
            <row>
              <cell>F</cell>
              <cell>F</cell>
              <cell>T</cell>
              <cell>T</cell>
              <cell>T</cell>
            </row>
            <row>
              <cell>F</cell>
              <cell>F</cell>
              <cell>F</cell>
              <cell>T</cell>
              <cell>T</cell>
            </row>
            <row>
              <cell/>
            </row>
          </tabular>

        </sidebyside>

        <p permid="Eny">
          Look at the fourth
          (or sixth)
          row.
          In this case, <m>(P \imp R) \vee (Q \imp R)</m> is true,
          but <m>(P \vee Q) \imp R</m> is false.
          Therefore the statements are not logically equivalent.
        </p>

        <p permid="kuH">
          While we don't have logical equivalence,
          it is the case that whenever <m>(P \vee Q) \imp R</m> is true,
          so is <m>(P \imp R) \vee (Q \imp R)</m>.
          This tells us that we can <em>deduce</em>
          <m>(P \imp R) \vee (Q \imp R)</m> from <m>(P \vee Q) \imp R</m>,
          just not the reverse direction.
        </p>
      </solution>
    </example>
  </subsection>

  <subsection permid="kQg">
    <title>Deductions</title>
    <investigation permid="ouG">
      <p permid="sJa">
        Holmes owns two suits: one black and one tweed.
        He always wears either a tweed suit or sandals.
        Whenever he wears his tweed suit and a purple shirt,
        he chooses to not wear a tie.
        He never wears the tweed suit unless he is also wearing either a purple shirt or sandals.
        Whenever he wears sandals, he also wears a purple shirt.
        Yesterday, Holmes wore a bow tie.
        What else did he wear?
      </p>
    </investigation>
    <p permid="XKQ">
      Earlier we claimed that the following was a valid argument:
    </p>

    <blockquote permid="iFu">
      <p permid="Srd">
        If Edith eats her vegetables,
        then she can have a cookie.
        Edith ate her vegetables.
        Therefore Edith gets a cookie.
      </p>
    </blockquote>

    <p permid="DRZ">
      How do we know this is valid?
      Let's look at the form of the statements.
      Let <m>P</m> denote <q>Edith eats her vegetables</q>
      and <m>Q</m> denote <q>Edith can have a cookie.</q>
      The logical form of the argument is then:
    </p>

    <sidebyside permid="Xwv">

      <tabular permid="EBT" halign="center">
        <row>
          <cell/>
          <cell><m>P \imp Q</m></cell>
        </row>
        <row bottom="minor">
          <cell/>
          <cell><m>P</m></cell>
        </row>
        <row>
          <cell><m>\therefore</m></cell>
          <cell><m>Q</m></cell>
        </row>
      </tabular>

    </sidebyside>

    <p permid="jZi">
      This is an example of a <term>deduction rule</term>,
          <idx><h>deduction rule</h></idx>
      an argument form which is always valid.
      This one is a particularly famous rule called
      <foreign>modus ponens</foreign>.
          <idx><em>modus ponens</em></idx>
      Are you convinced that it is a valid deduction rule?
      If not, consider the following truth table:
    </p>

    <sidebyside permid="DDE">

      <tabular permid="kJc" halign="center">
        <col right="minor"/>
        <col right="medium"/>
        <col/>
        <row bottom="minor">
          <cell><m>P</m></cell>
          <cell><m>Q</m></cell>
          <cell><m>P\imp Q</m></cell>
        </row>
        <row>
          <cell>T</cell>
          <cell>T</cell>
          <cell>T</cell>
        </row>
        <row>
          <cell>T</cell>
          <cell>F</cell>
          <cell>F</cell>
        </row>
        <row>
          <cell>F</cell>
          <cell>T</cell>
          <cell>T</cell>
        </row>
        <row>
          <cell>F</cell>
          <cell>F</cell>
          <cell>T</cell>
        </row>
      </tabular>

    </sidebyside>

    <p permid="Qgr">
      This is just the truth table for <m>P \imp Q</m>,
      but what matters here is that all the lines in the deduction rule have their own column in the truth table.
      Remember that an argument is valid provided the conclusion must be true given that the premises are true.
      The premises in this case are <m>P \imp Q</m> and <m>P</m>.
      Which <em>rows</em> of the truth table correspond to both of these being true? <m>P</m> is true in the first two rows,
      and of those,
      only the first row has <m>P \imp Q</m> true as well.
      And lo-and-behold, in this one case, <m>Q</m> is also true.
      So if <m>P\imp Q</m> and <m>P</m> are both true,
      we see that <m>Q</m> must be true as well.
    </p>

    <p permid="wnA">
      Here are a few more examples.
    </p>

    <example permid="Lid">
      <statement>
        <p permid="jpo">
          Show that
        </p>

        <sidebyside permid="jKN">

          <tabular permid="Hwz" halign="center">
            <row>
              <cell/>
              <cell><m>P \imp Q</m></cell>
            </row>
            <row bottom="minor">
              <cell/>
              <cell><m>\neg P \imp Q</m></cell>
            </row>
            <row>
              <cell><m>\therefore</m></cell>
              <cell><m>Q</m></cell>
            </row>
          </tabular>

        </sidebyside>

        <p permid="Pwx">
          is a valid deduction rule.
        </p>
      </statement>
      <solution permid="dVB">
        <p permid="QBQ">
          We make a truth table which contains all the lines of the argument form:
        </p>

        <sidebyside permid="PRW">

          <tabular permid="iTP" halign="center">
            <col right="minor"/>
            <col right="medium"/>
            <col right="minor"/>
            <col right="minor"/>
            <col/>
            <row bottom="minor">
              <cell><m>P</m></cell>
              <cell><m>Q</m></cell>
              <cell><m>P\imp Q</m></cell>
              <cell><m>\neg P</m></cell>
              <cell><m>\neg P \imp Q</m></cell>
            </row>
            <row>
              <cell>T</cell>
              <cell>T</cell>
              <cell>T</cell>
              <cell>F</cell>
              <cell>T</cell>
            </row>
            <row>
              <cell>T</cell>
              <cell>F</cell>
              <cell>F</cell>
              <cell>F</cell>
              <cell>T</cell>
            </row>
            <row>
              <cell>F</cell>
              <cell>T</cell>
              <cell>T</cell>
              <cell>T</cell>
              <cell>T</cell>
            </row>
            <row>
              <cell>F</cell>
              <cell>F</cell>
              <cell>T</cell>
              <cell>T</cell>
              <cell>F</cell>
            </row>
          </tabular>

        </sidebyside>

        <p permid="wIZ">
          (we include a column for <m>\neg P</m> just as a step to help getting the column for <m>\neg P \imp Q</m>).
        </p>

        <p permid="cQi">
          Now look at all the rows for which both
          <m>P \imp Q</m> and <m>\neg P \imp Q</m> are true.
          This happens only in rows 1 and 3.
          Hey!
          In those rows <m>Q</m> is true as well,
          so the argument form is valid
          (it is a valid deduction rule).
        </p>
      </solution>
    </example>

    <example permid="rpm">
      <statement>
        <p permid="vDG">
          Decide whether
        </p>

        <sidebyside permid="vZf">

          <tabular permid="nDI" halign="center">
            <row>
              <cell/>
              <cell><m>P \imp R</m></cell>
            </row>
            <row>
              <cell/>
              <cell><m>Q \imp R</m></cell>
            </row>
            <row bottom="minor">
              <cell/>
              <cell><m>R</m></cell>
            </row>
            <row>
              <cell><m>\therefore</m></cell>
              <cell><m>P \vee Q</m></cell>
            </row>
          </tabular>

        </sidebyside>

        <p permid="bKP">
          is a valid deduction rule.
        </p>
      </statement>
      <solution permid="KcK">
        <p permid="IXr">
          Let's make a truth table containing all four statements.
        </p>

        <sidebyside permid="cgo">

          <tabular permid="PaY" halign="center">
            <col right="minor"/>
            <col right="minor"/>
            <col right="medium"/>
            <col right="minor"/>
            <col right="minor"/>
            <col/>
            <row bottom="minor">
              <cell><m>P</m></cell>
              <cell><m>Q</m></cell>
              <cell><m>R</m></cell>
              <cell><m>P \imp R</m></cell>
              <cell><m>Q \imp R</m></cell>
              <cell><m>P \vee Q</m></cell>
            </row>
            <row>
              <cell>T</cell>
              <cell>T</cell>
              <cell>T</cell>
              <cell>T</cell>
              <cell>T</cell>
              <cell>T</cell>
            </row>
            <row>
              <cell>T</cell>
              <cell>T</cell>
              <cell>F</cell>
              <cell>F</cell>
              <cell>F</cell>
              <cell>T</cell>
            </row>
            <row>
              <cell>T</cell>
              <cell>F</cell>
              <cell>T</cell>
              <cell>T</cell>
              <cell>T</cell>
              <cell>T</cell>
            </row>
            <row>
              <cell>T</cell>
              <cell>F</cell>
              <cell>F</cell>
              <cell>F</cell>
              <cell>T</cell>
              <cell>T</cell>
            </row>
            <row>
              <cell>F</cell>
              <cell>T</cell>
              <cell>T</cell>
              <cell>T</cell>
              <cell>T</cell>
              <cell>T</cell>
            </row>
            <row>
              <cell>F</cell>
              <cell>T</cell>
              <cell>F</cell>
              <cell>T</cell>
              <cell>F</cell>
              <cell>T</cell>
            </row>
            <row>
              <cell>F</cell>
              <cell>F</cell>
              <cell>T</cell>
              <cell>T</cell>
              <cell>T</cell>
              <cell>F</cell>
            </row>
            <row>
              <cell>F</cell>
              <cell>F</cell>
              <cell>F</cell>
              <cell>T</cell>
              <cell>T</cell>
              <cell>F</cell>
            </row>
          </tabular>

        </sidebyside>

        <p permid="peA">
          Look at the second to last row.
          Here all three premises of the argument are true,
          but the conclusion is false.
          Thus this is not a valid deduction rule.
        </p>

        <p permid="VlJ">
          While we have the truth table in front of us, look at rows 1 and 5.
          These are the only rows in which all of the statements statements <m>P \imp R</m>,
          <m>Q \imp R</m>, and <m>P\vee Q</m> are true.
          It also happens that <m>R</m> is true in these rows as well.
          Thus we have discovered a new deduction rule we know <em>is</em> valid:
        </p>

        <sidebyside permid="Inx">

          <tabular permid="vih" halign="center">
            <row>
              <cell/>
              <cell><m>P \imp R</m></cell>
            </row>
            <row>
              <cell/>
              <cell><m>Q \imp R</m></cell>
            </row>
            <row bottom="minor">
              <cell/>
              <cell><m>P \vee Q</m></cell>
            </row>
            <row>
              <cell><m>\therefore</m></cell>
              <cell><m>R</m></cell>
            </row>
          </tabular>

        </sidebyside>
      </solution>
    </example>
  </subsection>

  <subsection permid="QXp">
    <title>Beyond Propositions</title>
    <p permid="cuJ">
      As we saw in <xref ref="sec_intro-statements"/>,
      not every statement can be analyzed using logical connectives alone.
      For example, we might want to work with the statement:
    </p>

    <blockquote permid="OMD">
      <p permid="yym">
        All primes greater than 2 are odd.
      </p>
    </blockquote>

    <p permid="IBS">
      To write this statement symbolically, we must use quantifiers.
      We can translate as follows:
      <me permid="FHm">
        \forall x ((P(x) \wedge x \gt 2) \imp O(x))
      </me>.
      In this case, we are using <m>P(x)</m> to denote
      <q><m>x</m> is prime</q>
      and <m>O(x)</m> to denote <q><m>x</m> is odd.</q>
      These are not propositions,
      since their truth value depends on the input <m>x</m>.
      Better to think of <m>P</m> and <m>O</m> as denoting
      <em>properties</em> of their input.
      The technical term for these is <term>predicates</term>
      and when we study them in logic,
      we need to use <term>predicate logic</term>.
    </p>

    <p permid="oJb">
      It is important to stress that predicate logic
      <em>extends</em> propositional logic
      (much in the way quantum mechanics extends classical mechanics).
      You will notice that our statement above still used the (propositional) logical connectives.
      Everything that we learned about logical equivalence and deductions still applies.
      However, predicate logic allows us to analyze statements at a higher resolution,
      digging down into the individual propositions <m>P</m>,
      <m>Q</m>, etc.
    </p>

    <p permid="UQk">
      A full treatment of predicate logic is beyond the scope of this text.
      One reason is that there is no systematic procedure for deciding whether two statements in predicate logic are logically equivalent (i.e., there is no analogue to truth tables here).
      Rather, we end with a couple of examples of logical equivalence and deduction,
      to pique your interest.
    </p>

    <example permid="UBP">
      <statement>
        <p permid="HRY">
          Suppose we claim that there is no smallest number.
          We can translate this into symbols as
          <me permid="lOv">
            \neg \exists x \forall y (x \le y)
          </me>
          (literally, <q>it is not true that there is a number <m>x</m> such that for all numbers <m>y</m>,
          <m>x</m> is less than or equal to <m>y</m></q>).
        </p>

        <p permid="nZh">
          However, we know how negation interacts with quantifiers:
          we can pass a negation over a quantifier by switching the quantifier type
          (between universal and existential).
          So the statement above should be
          <em>logically equivalent</em> to
          <me permid="RVE">
            \forall x \exists y (y \lt x)
          </me>.
          Notice that <m>y \lt x</m> is the negation of <m>x \le y</m>.
          This literally says,
          <q>for every number <m>x</m> there is a number <m>y</m> which is smaller than <m>x</m>.</q>
          We see that this is another way to make our original claim.
        </p>
      </statement>
    </example>

    <example permid="AIY">
      <statement>
        <p permid="Ugq">
          Can you switch the order of quantifiers?
          For example, consider the two statements:
          <me permid="ycN">
            \forall x \exists y P(x,y) \qquad \mathrm{ and } \qquad \exists y \forall x P(x,y)
          </me>.
          Are these logically equivalent?
        </p>
      </statement>
      <solution permid="qjT">
        <p permid="BsS">
          These statements are NOT logically equivalent.
          To see this,
          we should provide an interpretation of the predicate <m>P(x,y)</m> which makes one of the statements true and the other false.
        </p>

        <p permid="hAb">
          Let <m>P(x,y)</m> be the predicate <m>x \lt y</m>.
          It is true, in the natural numbers,
          that for all <m>x</m> there is some <m>y</m> greater than it
          (since there are infinitely many numbers).
          However, there is not a natural number <m>y</m> which is greater than every number <m>x</m>.
          Thus it is possible for <m>\forall x \exists y P(x,y)</m> to be true while <m>\exists y \forall x P(x,y)</m> is false.
        </p>

        <p permid="NHk">
          We cannot do the reverse of this though.
          If there is some <m>y</m> for which every <m>x</m> satisfies <m>P(x,y)</m>,
          then certainly for every <m>x</m> there is some <m>y</m> which satisfies <m>P(x,y)</m>.
          The first is saying we can find one <m>y</m> that works for every <m>x</m>.
          The second allows different <m>y</m>'s to work for different <m>x</m>'s, but there is nothing preventing us from using the same <m>y</m> that work for every <m>x</m>.
          In other words,
          while we don't have logical equivalence between the two statements,
          we do have a valid deduction rule:
        </p>

        <sidebyside permid="gQh">

          <tabular permid="bpq" halign="center">
            <row bottom="minor">
              <cell/>
              <cell><m>\exists y \forall x P(x,y)</m></cell>
            </row>
            <row>
              <cell><m>\therefore</m></cell>
              <cell><m>\forall x \exists y P(x,y)</m></cell>
            </row>
          </tabular>

        </sidebyside>

        <p permid="tOt">
          Put yet another way, this says that the single statement
          <me permid="ejW">
            \exists y \forall x P(x,y) \imp \forall x \exists y P(x,y)
          </me>
          is always true.
          This is sort of like a tautology,
          although we reserve that term for necessary truths in propositional logic.
          A statement in predicate logic that is necessarily true gets the more prestigious designation of a <term>law of logic</term>
              <idx>law of logic</idx>
          (or sometimes <term>logically valid</term>,
              <idx><h>logically valid</h><see>law of logic</see></idx>
          but that is less fun).
        </p>
      </solution>
    </example>
  </subsection>

  <xi:include href="exercises/logic-prop.ptx"/>
</section>

